#include "lab1.h"
#include "stdafx.h"

using namespace std;

void Initialization()  // Вывод сообщения на экран
{
	cout << "Hello World\n";

	int a; // Объявление целочисленной переменной
	a = 5; // Инициализация переменной значением
	int b = 3;

	cout << "Переменная а = " << a << "\n"; // Вывод значения переменной на экран
	cout << "Переменная b = " << b << "\n";
	cout << "Сумма a и b = " << a + b << "\n";
}
void Division()  // Вывод на экран результат деления целочисленных и вещественных переменных
{
	int a = 5;
	int b = 2;
	float z = 5.0;
	float y = 3.0;

	cout << "Разделение переменных Float: " << z / y << "\n";
	cout << "Деление целочисленных переменных: " << a / b << "\n";
}
void Amount()  // Чтение двух целочисленных переменных с клавиатуры и вывод их суммы на экран
{
	int a, b;

	cout << "---Программа для целочисленного суммирования---" << "\n";
	cout << "\nВведите первое целочисленное значение: ";
	cin >> a; // Чтение значения переменной с клавиатуры
	cout << "Введите второе целочисленное значение: ";
	cin >> b;
	cout << "Сумма " << a << " и " << b << " = " << a + b << "\n";
}
void Pointer()  // Выводит на экран адрес, хранимый в указателе и значение, которое хранится по данному адресу
{
	int value;
	int* pointer; // Объявление указателя на целочисленный тип данных
	int anotherValue;
	value = 5;
	pointer = &value; // Операция взятия адреса переменной
	anotherValue = *pointer; // Операция разыменования
	cout << "Значение, сохраненное в указателе: " << anotherValue << "\n";
	cout << "Адрес в указателе: " << pointer << "\n";
	cout << "Значение в указателе: " << *pointer << "\n";
}
void Parity()  // Определяет, является ли введенное число четным или нечетным
{
	int a;

	cout << "Введите значение для проверки на четное / нечетное: ";
	cin >> a;

	if (a % 2 == 0)
	{
		cout << "Значение " << a << " четное" << "\n";
	}
	else
	{
		cout << "Значение " << a << " нечетное" << "\n";
	}
}
void Multiplicity()  // Определяет кратность введенного числа 5 или 2
{
	int a;

	cout << "Введите значение для проверки на кратность: ";
	cin >> a;

	if ((a % 2 == 0) && (a % 5 == 0))
	{
		cout << "Значение " << a << " кратно 2 и 5" << "\n";
	}
	else if (a % 5 == 0)
	{
		cout << "Значение " << a << " кратно 5" << "\n";
	}
	else if (a % 2 == 0)
	{
		cout << "Значение " << a << " кратно 2" << "\n";
	}

	else
	{
		cout << "Значение " << a << " некратно ни 2, ни 5" << "\n";
	}
}
void CycleРrecondition()  //  Цикл с пред-условием 
{
	int a = 0;

	while (a <= 5)
	{
		cout << "Значение переменной сейчас = " << a << "\n";
		a++;
	}
}
void CycleРostcondition()  // Цикл с пост-условием
{
	int a = 0;

	do // условный цикл с пост-условием
	{
		cout << "Значение переменной сейчас = " << a << "\n";
		a++;
	} while (a <= 5);
}
void CycleIterative()  // Итерационный цикл
{
	int a = 10;

	for (int i = 0; i < 10; i++)
	{
		cout << "Итерация " << i << "\n";
	}

	cout << "\n\n";

	for (int i = 0; i < a; i++)
	{
		a--;
		cout << "Итерация " << i << "; Значение = " << a << "\n";
	}
}
void Breaker()  // Используется оператор break для досрочного завершения работы цикла
{
	int a = 10;

	for (int i = 0; i < 10; i++)
	{
		a--;
		if (i >= a)
		{
			cout << "i больше или рвно а! \nРазрыв цикла\n";
			break;
		}
	}
	cout << "a = " << a << "\n";
}
void TypeConversions()  //  Выполняется явное и неявное преобразование типов данных
{
	int a = 5;
	int b = 3;
	float z;

	z = a; // Неявное приведение типов
	cout << "Значение z = " << z << "\n";

	//a = z;  Ошибка - невозможное приведение типов!

	a = (int)z;  // Явное приведение типов
	cout << "Значение а = " << a << "\n";
	z = a / b;   // Неявное приведение результата деления целочисленных переменных
	cout << "Значение z = " << z << "\n";
	z = ((float)a) / b;  // Явное приведение а к float и неявное b к float для выполнения деления
	cout << "Значение z = " << z << "\n";
}
void LauncherLab1()
{
	setlocale(0, ""); // Подключаем русский язык

	int ascii = 0;
	char key;

	while (ascii != 27)
	{
		system("cls"); // Очистка экрана

		cout << "Нажмите... \n";
		cout << "'0' - Вывести на экран 'Hello World' и значения целочисленных переменных; \n";
		cout << "'1' - Вывести результаты деления двух целочисленных и вещественных переменных; \n";
		cout << "'2' - Выполнить чтение двух целочисленных переменных с клавиатуры и вывод их суммы; \n";
		cout << "'3' - Вывести  на экран адрес, хранимый в указателе и значение, которое хранится по данному адресу; \n";
		cout << "'4' - Проверка числа на четность и нечетность; \n";
		cout << "'5' - Определить кратность введенного числа 5 или 2; \n";
		cout << "'6' - Цикл с пред-условием; \n";
		cout << "'7' - Цикл с пост-условием; \n";
		cout << "'8' - Итерационный цикл; \n";
		cout << "'9' - Оператор break для досрочного завершения работы цикла; \n";
		cout << "'a' - Явное и неявное преобразование типов данных; \n";
		cout << "Нажмите Esc для выхода. \n\n";

		key = _getch(); // Ожидает ввода символа с клавиатуры 
		ascii = key;

		switch (ascii) // Условный оператор
		{
		case '0':
			Initialization();
			system("pause"); // Пауза в консоли
			break;
		case '1':
			Division();
			system("pause");
			break;
		case '2':
			Amount();
			system("pause");
			break;
		case '3':
			Pointer();
			system("pause");
			break;
		case '4':
			Parity();
			system("pause");
			break;
		case '5':
			Multiplicity();
			system("pause");
			break;
		case '6':
			CycleРrecondition();
			system("pause");
			break;
		case '7':
			CycleРostcondition();
			system("pause");
			break;
		case '8':
			CycleIterative();
			system("pause");
			break;
		case '9':
			Breaker();
			system("pause");
			break;
		case 'a':
			TypeConversions();
			system("pause");
			break;
		}
	}
}